#ifndef _PROPERTY_KEYS_
#define _PROPERTY_KEYS_

#define ADD_FILTER "Add_Filter"

#define IMAGE_TYPE "Image_Type"
#define ANIMATION_TYPE "Animation_Type"
#define AUDIO_TYPE "Audio_Type"

#define SVG_FORMAT "svg"
#define RGB_FORMAT "rgb"
#define RGBA_FORMAT "rgba"
#define SEPARATED_YUV_FORMAT "separated_yuv"
#define TXT_FORMAT "txt"
#define WAV_FORMAT "wav"
#define PLAYER_FORMAT "player"

#define PLAYER_INPUT "Player_Input" 
#define PLAYER_STATE "Player_State" 
#define PLAYER_PLAY "Player_Play"
#define PLAYER_PAUSE "Player_Pause"
#define PLAYER_STOP "Player_Stop"
#define PLAYER_VOLUME "Player_Volume"
#define PLAYER_MUTE "Player_Mute"
#define PLAYER_SPEED "Player_Speed"
#define GET_TIME_IN_MS "Get_Time_in_ms"
#define NUM_COMPONENTS "Num_Components"

#define ADD_FILTER "Add_Filter"

#define COMPONENT_INFO "Component_Info"
#define COMPONENT_NAME "Component_Name"
#define COMPONENT_TYPE "Component_Type"
#define COMPONENT_FORMAT "Component_Format"
#define COMPONENT_WIDTH "Component_Width"
#define COMPONENT_HEIGHT "Component_Height"
#define COMPONENT_SIZE "Component_Size"
#define COMPONENT_FRAME_COUNT "Component_Frame_Count"
#define COMPONENT_FRAME_DELAY "Component_Frame_Delay"
#define COMPONENT_CURRENT_FRAME "Component_Current_Frame"
#define COMPONENT_NB_CHANNELS "Component_Nb_Channels"
#define COMPONENT_SAMPLERATE "Component_Samplerate"
#define COMPONENT_DURATION "Component_Duration"
#define DURATION "duration"
#define DISPLAY_SIZE "display_size"
#define DISPLAY_WIDTH "width"
#define DISPLAY_HEIGHT "height"
#define INFO "info"
#define COMPONENT_NB_SAMPLE_PER_CHANNEL "Component_Nb_Sample_Per_Channel"
#define TRANSCODE_TO "transcode"
#define TRANSCODE_TO_FILE "file"

#define CODEC_NAME "Codec_Name"

#define COMPONENT_DISPLAY_FRAME "Component_Display_Frame"
#define COMPONENT_CHANNEL "Component_Channel"


#define COMPONENT_GET "Component_Get"

#define COMPONENT_Y "Component_Y"
#define COMPONENT_U "Component_U"
#define COMPONENT_V "Component_V"

#define NOT_SUPPORTED "Not_Supported"
#define OPERATION_COMPLETED "Openration_Completed"

//Make sure event char list is aligned with enum in event_constant.h
#define FOREACH_EVENT(EVENT) \
	EVENT(GF_EVENT_CLICK)   \
	EVENT(GF_EVENT_MOUSEUP)   \
	EVENT(GF_EVENT_MOUSEDOWN)   \
	EVENT(GF_EVENT_MOUSEOVER)   \
	EVENT(GF_EVENT_MOUSEOUT)   \
	EVENT(GF_EVENT_MOUSEMOVE)   \
	EVENT(GF_EVENT_MOUSEWHEEL)   \
	EVENT(GF_EVENT_KEYUP)   \
	EVENT(GF_EVENT_KEYDOWN)   \
	EVENT(GF_EVENT_LONGKEYPRESS)   \
	EVENT(GF_EVENT_TEXTINPUT)   \
	EVENT(GF_EVENT_MULTITOUCH)   \
	EVENT(GF_EVENT_TEXTSELECT)   \
	EVENT(GF_EVENT_FOCUSIN)   \
	EVENT(GF_EVENT_FOCUSOUT)   \
	EVENT(GF_EVENT_ACTIVATE)   \
	EVENT(GF_EVENT_CHANGE)   \
	EVENT(GF_EVENT_FOCUS)   \
	EVENT(GF_EVENT_BLUR)   \
	EVENT(GF_EVENT_LOAD)   \
	EVENT(GF_EVENT_UNLOAD)   \
	EVENT(GF_EVENT_ABORT)   \
	EVENT(GF_EVENT_ERROR)   \
	EVENT(GF_EVENT_RESIZE)   \
	EVENT(GF_EVENT_SCROLL)   \
	EVENT(GF_EVENT_ZOOM)   \
	EVENT(GF_EVENT_BEGIN)   \
	EVENT(GF_EVENT_BEGIN_EVENT)   \
	EVENT(GF_EVENT_END)   \
	EVENT(GF_EVENT_END_EVENT)   \
	EVENT(GF_EVENT_REPEAT)   \
	EVENT(GF_EVENT_REPEAT_EVENT)   \
	EVENT(GF_EVENT_TREE_MODIFIED)   \
	EVENT(GF_EVENT_NODE_INSERTED)   \
	EVENT(GF_EVENT_NODE_REMOVED)   \
	EVENT(GF_EVENT_NODE_INSERTED_DOC)   \
	EVENT(GF_EVENT_NODE_REMOVED_DOC)   \
	EVENT(GF_EVENT_ATTR_MODIFIED)   \
	EVENT(GF_EVENT_CHAR_DATA_MODIFIED)   \
	EVENT(GF_EVENT_NODE_NAME_CHANGED)   \
	EVENT(GF_EVENT_ATTR_NAME_CHANGED)   \
	EVENT(GF_EVENT_DCCI_PROP_CHANGE)   \
	EVENT(GF_EVENT_ACTIVATED)   \
	EVENT(GF_EVENT_DEACTIVATED)   \
	EVENT(GF_EVENT_PAUSE)   \
	EVENT(GF_EVENT_PAUSED_EVENT)   \
	EVENT(GF_EVENT_PLAY)   \
	EVENT(GF_EVENT_REPEAT_KEY)   \
	EVENT(GF_EVENT_RESUME_EVENT)   \
	EVENT(GF_EVENT_SHORT_ACCESSKEY)   \
	EVENT(GF_EVENT_EXECUTION_TIME)   \
	EVENT(GF_EVENT_MEDIA_SETUP_BEGIN)   \
	EVENT(GF_EVENT_MEDIA_SETUP_DONE)   \
	EVENT(GF_EVENT_MEDIA_LOAD_START)   \
	EVENT(GF_EVENT_MEDIA_LOAD_DONE)   \
	EVENT(GF_EVENT_MEDIA_PROGRESS)   \
	EVENT(GF_EVENT_MEDIA_SUSPEND)   \
	EVENT(GF_EVENT_MEDIA_EMPTIED)   \
	EVENT(GF_EVENT_MEDIA_STALLED)   \
	EVENT(GF_EVENT_MEDIA_LOADED_METADATA)   \
	EVENT(GF_EVENT_MEDIA_LODADED_DATA)   \
	EVENT(GF_EVENT_MEDIA_CANPLAY)   \
	EVENT(GF_EVENT_MEDIA_CANPLAYTHROUGH)   \
	EVENT(GF_EVENT_MEDIA_PLAYING)   \
	EVENT(GF_EVENT_MEDIA_WAITING)   \
	EVENT(GF_EVENT_MEDIA_SEEKING)   \
	EVENT(GF_EVENT_MEDIA_SEEKED)   \
	EVENT(GF_EVENT_MEDIA_ENDED)   \
	EVENT(GF_EVENT_MEDIA_DURATION_CHANGED)   \
	EVENT(GF_EVENT_MEDIA_TIME_UPDATE)   \
	EVENT(GF_EVENT_MEDIA_RATECHANGE)   \
	EVENT(GF_EVENT_MEDIA_VOLUME_CHANGED)   \
	EVENT(GF_EVENT_HTML_MSE_SOURCE_OPEN)   \
	EVENT(GF_EVENT_HTML_MSE_SOURCE_ENDED)   \
	EVENT(GF_EVENT_HTML_MSE_SOURCE_CLOSE)   \
	EVENT(GF_EVENT_HTML_MSE_UPDATE_START)   \
	EVENT(GF_EVENT_HTML_MSE_UPDATE)   \
	EVENT(GF_EVENT_HTML_MSE_UPDATE_END)   \
	EVENT(GF_EVENT_HTML_MSE_UPDATE_ERROR)   \
	EVENT(GF_EVENT_HTML_MSE_UPDATE_ABORT)   \
	EVENT(GF_EVENT_HTML_MSE_ADD_SOURCE_BUFFER)   \
	EVENT(GF_EVENT_HTML_MSE_REMOVE_SOURCE_BUFFER)   \
	EVENT(GF_EVENT_BATTERY)   \
	EVENT(GF_EVENT_CPU)   \
	EVENT(GF_EVENT_UNKNOWN)   \
	EVENT(GF_EVENT_DBLCLICK)   \
	EVENT(GF_EVENT_SCENE_ATTACHED)   \
	EVENT(GF_EVENT_VP_RESIZE)   \
	EVENT(GF_EVENT_SIZE)   \
	EVENT(GF_EVENT_SCENE_SIZE)   \
	EVENT(GF_EVENT_SHOWHIDE)   \
	EVENT(GF_EVENT_SET_CURSOR)   \
	EVENT(GF_EVENT_SET_CAPTION)   \
	EVENT(GF_EVENT_MOVE)   \
	EVENT(GF_EVENT_REFRESH)   \
	EVENT(GF_EVENT_QUIT)   \
	EVENT(GF_EVENT_VIDEO_SETUP)   \
	EVENT(GF_EVENT_SET_GL)   \
	EVENT(GF_EVENT_SYS_COLORS)   \
	EVENT(GF_EVENT_PASTE_TEXT)   \
	EVENT(GF_EVENT_COPY_TEXT)   \
	EVENT(GF_EVENT_CONNECT)   \
	EVENT(GF_EVENT_DURATION)   \
	EVENT(GF_EVENT_EOS)   \
	EVENT(GF_EVENT_AUTHORIZATION)   \
	EVENT(GF_EVENT_NAVIGATE)   \
	EVENT(GF_EVENT_NAVIGATE_INFO)   \
	EVENT(GF_EVENT_MESSAGE)   \
	EVENT(GF_EVENT_PROGRESS)   \
	EVENT(GF_EVENT_VIEWPOINTS)   \
	EVENT(GF_EVENT_STREAMLIST)   \
	EVENT(GF_EVENT_METADATA)   \
	EVENT(GF_EVENT_MIGRATE)   \
	EVENT(GF_EVENT_DISCONNECT)   \
	EVENT(GF_EVENT_RESOLUTION)   \
	EVENT(GF_EVENT_DROPFILE)   \
	EVENT(GF_EVENT_TEXT_EDITING_START)   \
	EVENT(GF_EVENT_TEXT_EDITING_END)   \
	EVENT(GF_EVENT_QUALITY_SWITCHED)   \
	EVENT(GF_EVENT_TIMESHIFT_DEPTH)   \
	EVENT(GF_EVENT_TIMESHIFT_UPDATE)   \
	EVENT(GF_EVENT_TIMESHIFT_OVERFLOW)   \
	EVENT(GF_EVENT_TIMESHIFT_UNDERRUN)   \
	EVENT(GF_EVENT_MAIN_ADDON_STATE)   \
	EVENT(GF_EVENT_ADDON_DETECTED)   \
	EVENT(GF_EVENT_SENSOR_ORIENTATION)   \
	EVENT(GF_EVENT_SENSOR_REQUEST) 


#define GENERATE_STRING(STRING) #STRING,

static const char *EVENT_STRING[] = {
    FOREACH_EVENT(GENERATE_STRING)
};



#endif
