#!/bin/bash
echo "Setting environnement"
BUILD_DIR=$PWD
debuginfo="no"
no_gcc_opt="no"

# Find source path
source_path="`echo $0 | sed -e 's#/configure##'`"
source_path_used="yes"
if test -z "$source_path" -o "$source_path" = "." ; then
    source_path="`pwd`"
    source_path_used="no"
    build_path=$source_path
else
    source_path="`cd \"$source_path\"; pwd`"
    build_path="`pwd`"
fi

for opt do
    case "$opt" in
        --enable-debug) debuginfo="yes"; no_gcc_opt="yes"
            ;;
    esac
done

if [ -z "$MAKEFLAGS" ]; then
    UNAMES=$(uname -s)
    MAKEFLAGS=
    if which nproc >/dev/null; then
        MAKEFLAGS=-j$(nproc)
    elif [ "$UNAMES" = "Darwin" ] && which sysctl >/dev/null; then
        MAKEFLAGS=-j$(sysctl -n machdep.cpu.thread_count)
    fi
fi

if test "$debuginfo" = "yes"; then
    EMCCFLAGS="-g"
    CMAKE_BUILD_TYPE="-DCMAKE_BUILD_TYPE=Debug"
else
    CMAKE_BUILD_TYPE="-DCMAKE_BUILD_TYPE=Release"
fi

echo "Init submodules"
git submodule update --init --recursive

echo "Configuring filters"
mkdir filters
cd filters
if test "$debuginfo" = "no"; then
    $source_path/filters/configure
else
    $source_path/filters/configure --enable-debug
fi

echo "Configuring nodejs dependencies"
cd $source_path
npm install
npx browserslist@latest --update-db

echo "Configuring emsdk"
source $source_path/filters/third_parties/emsdk_vers.txt
cd $source_path/filters/third_parties/emsdk
./emsdk install $EMSDK_VERS
./emsdk activate $EMSDK_VERS
. ./emsdk_env.sh

echo "Configuring player"
cd $BUILD_DIR
if test "$debuginfo" = "no"; then
    emcmake cmake $source_path -DDEBUG_MODE=OFF
else
    emcmake cmake $source_path -DDEBUG_MODE=ON
fi